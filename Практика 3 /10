import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class CodeBreaker {

    private static final int CODE_LENGTH = 4;
    private static final int MAX_ATTEMPTS = 20;

    public static void main(String[] args) {
        Random random = new Random();
        int[] secretCode = new int[CODE_LENGTH];
        for (int i = 0; i < CODE_LENGTH; i++) {
            secretCode[i] = random.nextInt(10); // Digits from 0 to 9
        }

        Scanner scanner = new Scanner(System.in);
        int attempts = 0;

        System.out.println("Добро пожаловать в игру CodeBreaker!");
        System.out.println("Я загадал код из " + CODE_LENGTH + " цифр (0-9).");
        System.out.println("У вас есть " + MAX_ATTEMPTS + " попыток, чтобы его разгадать.");

        while (attempts < MAX_ATTEMPTS) {
            attempts++;
            System.out.println("Попытка #" + attempts + ":");
            System.out.print("Введите " + CODE_LENGTH + " числа, разделенных пробелами: ");

            int[] guess = new int[CODE_LENGTH];
            for (int i = 0; i < CODE_LENGTH; i++) {
                guess[i] = scanner.nextInt();
            }

            int matches = countMatches(secretCode, guess);

            if (matches == CODE_LENGTH) {
                System.out.println("Поздравляю! Вы разгадали код за " + attempts + " попыток.");
                System.out.println("Код: " + Arrays.toString(secretCode));
                break;
            } else {
                System.out.println("Совпадений: " + matches);
            }
        }

        if (attempts == MAX_ATTEMPTS) {
            System.out.println("Вы исчерпали все попытки. Код был: " + Arrays.toString(secretCode));
        }

        scanner.close();
    }

    // Helper function to count the number of matches between the secret code and the guess
    private static int countMatches(int[] secretCode, int[] guess) {
        int matches = 0;
        for (int i = 0; i < CODE_LENGTH; i++) {
            if (secretCode[i] == guess[i]) {
                matches++;
            }
        }
        return matches;
    }
}
