import java.util.HashMap;
import java.util.Map;

public class RomanToArabicConverter {

    private static final Map<Character, Integer> romanMap = new HashMap<>();

    static {
        romanMap.put('I', 1);
        romanMap.put('V', 5);
        romanMap.put('X', 10);
        romanMap.put('L', 50);
        romanMap.put('C', 100);
        romanMap.put('D', 500);
        romanMap.put('M', 1000);
    }

    public static int romanToArabic(String roman) {
        if (roman == null || roman.isEmpty()) {
            throw new IllegalArgumentException("Input Roman numeral is empty");
        }

        int result = 0;
        int i = 0;
        int length = roman.length();

        while (i < length) {
            char currentChar = roman.charAt(i);
            if (!romanMap.containsKey(currentChar)) {
                throw new IllegalArgumentException("Invalid Roman numeral character: " + currentChar);
            }
            int currentVal = romanMap.get(currentChar);

            int nextVal = 0;
            if (i + 1 < length) {
                char nextChar = roman.charAt(i + 1);
                if (!romanMap.containsKey(nextChar)) {
                    throw new IllegalArgumentException("Invalid Roman numeral character: " + nextChar);
                }
                nextVal = romanMap.get(nextChar);
            }

            if (nextVal > currentVal) {
                result += (nextVal - currentVal);
                i += 2;
            } else {
                result += currentVal;
                i++;
            }
        }

        if (result <= 0 || result >= 10000) {
            throw new IllegalArgumentException("Resulting number out of allowed range (1 < n < 10000): " + result);
        }


        return result;
    }

    public static void main(String[] args) {
        String romanYear = "MCMLXXXVII"; // 1987
        System.out.println("Roman numeral: " + romanYear);
        int arabicYear = romanToArabic(romanYear);
        System.out.println("Arabic number: " + arabicYear);
    }
}
